services:
  api:
    build:
      context: ./api
    container_name: flask_api
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring_net

  worker:
    build:
      context: ./worker
    container_name: background_worker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring_net

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: transactions
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - monitoring_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring_net

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring_net

  blackbox_exporter:
    image: prom/blackbox-exporter
    container_name: blackbox_exporter
    ports:
      - "9115:9115"
    networks:
      - monitoring_net
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    ports:
      - "9093:9093"
    networks:
      - monitoring_net
  alert_bot:
    build: ./alert_bot
    container_name: alert_bot
    ports:
      - "5001:5001"
    networks:
      - monitoring_net

volumes:
  db_data:

networks:
  monitoring_net:
    driver: bridge
